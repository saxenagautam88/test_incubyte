class StringCalculator {
  constructor() {
    this.addCount = 0;
  }

  add(numbers) {
    this.addCount++;

    if (numbers === "") {
      return 0;
    }

    
    let delimiter = ",";
    if (numbers.startsWith("//")) {
      const customDelimiterEnd = numbers.indexOf("\n");
      delimiter = numbers.substring(2, customDelimiterEnd);
      numbers = numbers.substring(customDelimiterEnd + 1);
    }

    
    const numberArray = numbers.split(new RegExp(`[\n${delimiter}]+`));

    
    let sum = 0;
    let negatives = [];

    for (const numStr of numberArray) {
      const num = parseInt(numStr);

      if (num < 0) {
        negatives.push(num);
      } else if (num <= 1000) {
        sum += num;
      }
    }

    // Throw exception for negative numbers
    if (negatives.length > 0) {
      throw new Error(`Negatives not allowed: ${negatives.join(",")}`);
    }

    return sum;
  }

  getCalledCount() {
    return this.addCount;
  }

  onAdd(callback) {
    this.addOccured = callback;
  }

  triggerAddEvent(input, result) {
    if (this.addOccured) {
      this.addOccured(input, result);
    }
  }
}

// Example 
const calculator = new StringCalculator();

console.log(calculator.add("1\n2,3"));          
console.log(calculator.add("//;\n1;2"));         
console.log(calculator.add("//[*][%]\n1*2%3"));  
console.log(calculator.getCalledCount());        
